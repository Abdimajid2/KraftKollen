name: PR Test Failure Reporter

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  test-and-report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0'

      - name: Run Tests and Generate xUnit Results
        id: run-tests
        run: |
          mkdir -p test_results
          # Kör tester och logga resultat
          dotnet test KraftKollen/KraftKollen.Tests/KraftKollen.Tests.csproj \
            --logger "xunit;LogFileName=test_results/results.xml" > test_results/test_log.txt 2>&1 || echo "TEST_FAILED"
          echo "Contents of test_results directory after running tests:"
          ls -l test_results

      - name: Check for Test Failures
        id: check-tests
        continue-on-error: true # Fortsätt även om testerna misslyckas
        run: |
          if grep -q "Failed" test_results/test_log.txt; then
            echo "Tests failed!"
            echo "test_failed=true" >> $GITHUB_ENV
            exit 1  # Markerar detta steg som misslyckat (rött kryss)
          else
            echo "All tests passed."
            echo "test_failed=false" >> $GITHUB_ENV
          fi

      - name: Upload Test Results
        if: always()  # Kör alltid
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test_results

  add-comment-to-pr:
    runs-on: ubuntu-latest
    needs: test-and-report
    if: always()  # Kör alltid, även om test-and-report misslyckas
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: test-results

      - name: Extract and Format Test Failures
        id: format-comment
        run: |
          formatted_comment="### Test Results\n"
          if [ "${{ env.test_failed }}" == "true" ]; then
            formatted_comment+="### ❌ Test Failures Summary\n"
            awk '
              /^\[xUnit.net.*FAIL\]/ {
                in_failure_block = 1
                test_name = substr($0, index($0, "]") + 2)
                formatted_failure = "#### Test: " test_name "\n"
              }
              
              in_failure_block {
                formatted_failure = formatted_failure $0 "\n"
                if ($0 ~ /\(pos [0-9]+\)/) {
                  if (++count == 2) {
                    in_failure_block = 0
                    print formatted_failure
                  }
                }
              }
            ' test_results/test_log.txt > extracted_failures.txt
            formatted_comment+=$(cat extracted_failures.txt)
          else
            formatted_comment+="### ✅ All tests passed!\n"
          fi

          echo "formatted_comment<<EOF" >> $GITHUB_ENV
          echo -e "$formatted_comment" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Comment on Pull Request
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: ${{ env.formatted_comment }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
