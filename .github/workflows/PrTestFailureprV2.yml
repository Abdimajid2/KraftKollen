name: PR Test Failure Reporter

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  test-and-report:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0'
          
      - name: Run Tests and Generate xUnit Results
        id: run-tests
        run: |
          mkdir -p test_results
          # Run tests and capture both standard output and errors into a log file
          dotnet test KraftKollen/KraftKollen.Tests/KraftKollen.Tests.csproj --logger "xunit;LogFileName=test_results/results.xml" > test_results/test_log.txt 2>&1
        continue-on-error: true

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test_results
 
  add-comment-to-pr:
    runs-on: ubuntu-latest
    needs: test-and-report
    
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: test-results
    
      - name: Extract Test Failures
        id: extract-failures
        run: |
          grep -oP '<failure message=.*?>.*?</failure>' test_results/results.xml > test_results/failures_summary.txt || echo "No failures found" > test_results/failures_summary.txt

      - name: Format Test Failures for Comment
        run: |
          echo "### ❌ Test Failures Summary" > comment.md
          echo "#### Below are the failed tests:" >> comment.md
          while read -r line; do
            message=$(echo "$line" | sed -E 's/<failure message="(.*?)">.*/\1/')
            echo "- $message" >> comment.md
          done < test_results/failures_summary.txt
          echo "For full details, check the [workflow logs](${{ github.run_url }})." >> comment.md
          
      - name: Comment on Pull Request
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: ${{ steps.format-comment.outputs.comment }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
