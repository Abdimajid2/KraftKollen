name: Run KraftKollen.Tests on Pull Request

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0'

      - name: Restore dependencies
        run: dotnet restore KraftKollen/KraftKollen.csproj

      - name: Run tests and generate results
        env:
          DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: false
          LANG: sv_SE.UTF-8
          LC_ALL: sv_SE.UTF-8
        run: |
          mkdir -p test_results
          dotnet test KraftKollen/KraftKollen.Tests/KraftKollen.Tests.csproj \
            --no-restore --logger "xunit;LogFileName=test_results/results.xml" > test_log.txt || true

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test_results

  report-failures:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Download test artifacts
        uses: actions/download-artifact@v4
        with:
          name: test-results

      - name: Extract and format test failures
        run: |
          if [ -f "test_log.txt" ]; then
            formatted_comment="### ❌ Test Failures Summary\n"
            awk '
              /^\[xUnit.net.*FAIL\]/ {
                in_failure_block = 1
                test_name = substr($0, index($0, "]") + 2)
                formatted_failure = "#### Test: " test_name "\n"
              }
              in_failure_block {
                formatted_failure = formatted_failure $0 "\n"
                if ($0 ~ /\(pos [0-9]+\)/) {
                  if (++count == 2) {
                    in_failure_block = 0
                    print formatted_failure
                  }
                }
              }
            ' test_log.txt > extracted_failures.txt
            formatted_comment+=$(cat extracted_failures.txt)
            echo "formatted_comment<<EOF" >> $GITHUB_ENV
            echo -e "$formatted_comment" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          else
            echo "No test log found. Skipping comment."
            exit 0
          fi

      - name: Comment on pull request
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: ${{ env.formatted_comment }}
